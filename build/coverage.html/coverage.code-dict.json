{"/home/travis/build/npmtest/node-npmtest-partition-bundle/test.js":"/* istanbul instrument in package npmtest_partition_bundle */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/lib.npmtest_partition_bundle.js":"/* istanbul instrument in package npmtest_partition_bundle */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_partition_bundle = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_partition_bundle = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-partition-bundle && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_partition_bundle */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_partition_bundle\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_partition_bundle.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_partition_bundle.rollup.js'] =\n            local.assetsDict['/assets.npmtest_partition_bundle.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_partition_bundle.__dirname + '/lib.npmtest_partition_bundle.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/node_modules/partition-bundle/index.js":"\"use strict\";\n\nvar through = require('through2');\nvar sort = require('deps-sort');\nvar combineSourceMap = require('combine-source-map');\nvar mkdirp = require('mkdirp');\nvar path = require('path');\nvar fs = require('fs');\nvar bresolve = require('browser-resolve');\nvar fold = require('./lib/fold');\nvar forOwn = require('./lib/forOwn');\nvar append = require('./lib/append');\nvar partition = require('./lib/partition');\n\nvar defaultPreludePath = path.join(__dirname, 'preludes', 'prelude.js');\nvar defaultPrelude = fs.readFileSync(defaultPreludePath);\n\nmodule.exports = partitionBundle;\n\nfunction partitionBundle(b, opts) {\n\n  opts = normalizeOptions(b, opts);\n  var shortIDLabels = opts.shortIDLabels = {};\n\n  var rOpts = {\n    basedir: opts.mapDir,\n    extensions: b._extensions\n  };\n\n  // require the modules from the map\n  forOwn(opts.map, function(modules, file) {\n    modules.forEach(function(mod, i) {\n      if (typeof mod === 'string') {\n        mod = {\n          require: mod,\n          expose: mod\n        };\n      }\n\n      var id = bresolve.sync(mod.require, rOpts);\n      shortIDLabels[id] = mod.expose;\n      modules[i] = id;\n      b.require(id, {entry: true});\n    });\n  });\n\n  // on reset, a new pipeline is installed, make sure we\n  // alter this one new one with our events too.\n  b.on('reset', function() {\n    installBundlePipeline(b.pipeline, opts);\n  });\n\n  // install initial pipeline\n  installBundlePipeline(b.pipeline, opts);\n\n}\n\nfunction installBundlePipeline(pipeline, opts) {\n\n  var cwd = opts.cwd;\n\n  var shortIDLabels = opts.shortIDLabels;\n  var labelCount = 1;\n\n  // streams for the output files\n  var streams = {};\n\n  function createStream(file, modulesByID, firstFile) {\n    // create output stream for this file\n    var stream = through.obj();\n    var outFile = path.resolve(opts.output, file);\n    var outDir = path.dirname(outFile);\n    mkdirp.sync(outDir);\n\n    var ws = fs.createWriteStream(outFile);\n\n    stream\n      .pipe(sort())\n      .pipe(wrap({\n        prelude: file == firstFile,\n        firstFile: firstFile,\n        files: Object.keys(opts.map),\n        map: modulesByID,\n        labels: shortIDLabels,\n        url: opts.url,\n        main: opts.main\n      }))\n      .pipe(ws);\n\n    // kinda hacky, to notify the stream has finished, unfortunately\n    // doesn't seem to happen automatically\n    ws.on('finish', function() {\n      stream.emit('finish');\n    });\n\n    streams[file] = stream;\n    return stream;\n  }\n\n  var partitioner = partition(opts.map, path.resolve(cwd, \"main.js\"));\n  var deps = pipeline.get('sort');\n\n  // initialize objects\n  var rows = [];\n  deps.push(through.obj(function(row, enc, next) {\n    partitioner.addModule(row);\n    // use a numeric label if the module doesn't have to be required\n    // by the user\n    if (!(row.expose || row.entry)) {\n      shortIDLabels[row.id] = labelCount++;\n    }\n    rows.push(row);\n    next();\n  }, function() {\n    var partitioned = partitioner.partition();\n    partitioned.files.forEach(function(file) {\n      streams[file] = createStream(\n        file,\n        partitioned.modulesByID,\n        partitioned.firstFile\n      );\n    });\n\n    rows.forEach(function(row) {\n      this.push(row);\n    }, this);\n    this.push(null);\n  }));\n\n  // replace labels by shorter IDs, if they are not replaced by numbers\n  var label = pipeline.get('label');\n  label.splice(0, 1, renameIDLabels(shortIDLabels));\n\n  // write modules to the multiple output streams\n  var pack = pipeline.get('pack');\n  pack.splice(0, 1, writeStreams(streams));\n\n}\n\nfunction normalizeOptions(b, opts) {\n  if (!opts) opts = {};\n  if (!opts.url) opts.url = '';\n  if (opts.url && opts.url.slice(-1) != '/') {\n    opts.url += '/';\n  }\n\n  var mapFile = opts.map;\n  var mapIsFile = (typeof mapFile == 'string');\n  if (mapIsFile) {\n    opts.map = JSON.parse(fs.readFileSync(mapFile));\n  }\n  if (!opts.map) {\n    opts.map = {};\n  }\n\n  var cwd = b._basedir || opts.basedir || (mapIsFile && path.dirname(mapFile)) || path.resolve(process.cwd());\n  opts.cwd = path.resolve(cwd);\n  opts.mapDir = mapIsFile ? path.resolve(path.dirname(mapFile)) : opts.cwd;\n  opts.output = opts.output || opts.o || opts.cwd;\n\n  if (opts.main && !Array.isArray(opts.main)) {\n    opts.main = [opts.main];\n  }\n\n  return opts;\n}\n\nfunction relativeID(from, to){\n  var file = path.relative(path.dirname(from), to);\n  file = file.replace(/\\\\/g, '/').replace(/\\/$/g, '');\n  if (file[0] != '.') file = './' + file;\n  return (path.extname(file) == '.js') ? file.slice(0, -3) : file;\n}\n\nfunction ensureJSFileName(filename) {\n  return filename + ((path.extname(filename) === '') ? '.js' : '');\n}\n\nfunction renameIDLabels(map) {\n  var buf = []; // buffer so each row is renamed before continuing\n  return through.obj(function(row, enc, next) {\n    if (map[row.id]) {\n      row.id = map[row.id];\n    }\n    if (row.dedupe && map[row.dedupe]) {\n      row.dedupe = map[row.dedupe];\n    }\n    forOwn(row.deps, function(dep, key) {\n      if (map[dep]) {\n        row.deps[key] = map[dep];\n      }\n    });\n    buf.push(row);\n    next();\n  }, function() {\n    buf.forEach(function(row) {\n      this.push(row);\n    }, this);\n    this.push(null);\n  });\n}\n\nfunction createFileMap(modules, files, entry) {\n  var map = {};\n  var modsByID = {};\n\n  forOwn(modules, function(mod, id) {\n    modsByID[mod.id] = mod;\n    map[mod.id] = [];\n  });\n\n  function push(id, dest) {\n    if (dest != entry) {\n      append(map[id], files.indexOf(dest));\n    }\n  }\n\n  function search(deps, id, searched, log) {\n    forOwn(deps, function(_id) {\n      var mod = modsByID[_id];\n\n      if (searched[_id]) return;\n      searched[_id] = true;\n\n      push(id, mod.destFile);\n      search(mod.deps, id, searched, log);\n    });\n  }\n\n  forOwn(modules, function(mod) {\n    var searched = {};\n    searched[mod.id] = true;\n    push(mod.id, mod.destFile);\n    search(mod.deps, mod.id, searched, (mod.id + '').match(/editsmark/i));\n  });\n  return map;\n}\n\nfunction newlinesIn(buf) {\n  return fold(buf, 0, function(char, i, count) {\n    return count + (char == 10 ? 1 : 0);\n  });\n}\n\nfunction wrapModule(row, deps) {\n  return new Buffer([\n    '\\nloadjs.d(\"',\n    row.id,\n    '\",function(require,module,exports){\\n',\n    combineSourceMap.removeComments(row.source),\n    '\\n},{',\n    deps,\n    '});\\n'\n  ].join(''));\n}\n\n// from object bundle into wrapped JS buffer, wrapping the source into\n// __define() calls and adding the prelude for the entry file\nfunction wrap(opts) {\n  if (!opts) opts = {};\n\n  var first = true;\n  var lineno = (opts.prelude ? newlinesIn(defaultPrelude) : 0) + 2;\n  var sourcemap;\n\n  var stream = through.obj(write, end);\n\n  return stream;\n\n  function write(row, enc, next) {\n    if (first && opts.prelude) {\n      stream.push(defaultPrelude);\n    }\n\n    if (row.sourceFile && !row.nomap) {\n      if (!sourcemap) {\n        sourcemap = combineSourceMap.create();\n      }\n\n      if (first && opts.prelude) {\n        sourcemap.addFile(\n          {sourceFile: defaultPreludePath, source: defaultPrelude.toString()},\n          {line: 0}\n        );\n      }\n\n      sourcemap.addFile(\n        {sourceFile: ensureJSFileName(row.sourceFile), source: row.source},\n        {line: lineno}\n      );\n    }\n\n    var deps = row.deps || {};\n\n    // make sure the deduped file requires the other module correctly.\n    // Browserify requires \"require(dedupeIndex)\". In our case however, it\n    // is easier to simply require by the module ID directly.\n    if (row.dedupe) {\n      row.source = \"module.exports=require(0);\";\n      deps[0] = row.dedupe;\n    }\n\n    deps = Object.keys(deps).sort().map(function (key) {\n      return JSON.stringify(key) + ':' + JSON.stringify(row.deps[key]);\n    }).join(',');\n\n    var wrappedSource = wrapModule(row, deps);\n\n    stream.push(wrappedSource);\n    lineno += newlinesIn(wrappedSource);\n\n    if (first && opts.prelude) {\n\n      if (opts.url) {\n        stream.push(new Buffer('\\nloadjs.url = \"' + opts.url + '\";'));\n      }\n\n      stream.push(new Buffer('\\nloadjs.files = [' + opts.files.map(function(file) {\n        return '\"' + file + '\"';\n      }).join(',') + ']'));\n\n      stream.push(new Buffer([\n        '\\nloadjs.map = ',\n        JSON.stringify(createFileMap(opts.map, opts.files, opts.firstFile)),\n        ';'\n      ].join('')));\n\n    }\n\n    first = false;\n    next();\n  }\n\n  function end() {\n    if (opts.main && opts.prelude) {\n      stream.push(new Buffer(\"loadjs(\" + JSON.stringify(opts.main) + \");\\n\"));\n    }\n\n    if (sourcemap) {\n      var comment = sourcemap.comment();\n      stream.push(new Buffer('\\n' + comment + '\\n'));\n    }\n    stream.push(null);\n  }\n\n}\n\nfunction writeStreams(streams) {\n  var count = 0;\n  var s = through.obj(function(row, enc, next) {\n    streams[row.destFile].push(row);\n    next();\n  }, function() {\n    forOwn(streams, function(stream, file) {\n      // add event to see if all streams have finished\n      stream.on('finish', function() {\n        if (++count == Object.keys(streams).length) {\n          s.push(null);\n        }\n      });\n      // close each stream\n      stream.push(null);\n    });\n  });\n  return s;\n}\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/node_modules/partition-bundle/lib/fold.js":"\"use strict\";\n\nmodule.exports = fold;\n\nfunction fold(array, acc, fn, ctx) {\n  for (var i = 0; i < array.length; i++) {\n    acc = fn.call(ctx, array[i], i, acc);\n  }\n  return acc;\n}\n\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/node_modules/partition-bundle/lib/forOwn.js":"\"use strict\";\n\nmodule.exports = forOwn;\n\nfunction forOwn(obj, fn, ctx) {\n  Object.keys(obj).forEach(function(key) {\n    fn.call(this, obj[key], key);\n  }, ctx);\n}\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/node_modules/partition-bundle/lib/append.js":"\"use strict\";\n\nvar indexOf = require('./indexOf');\n\nmodule.exports = append;\n\nfunction append(array, item) {\n  if (indexOf(array, item) == -1) {\n    array.push(item);\n  }\n  return array;\n}\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/node_modules/partition-bundle/lib/indexOf.js":"\"use strict\";\n\nmodule.exports = indexOf;\n\nfunction indexOf(array, item) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === item) return i;\n  }\n  return -1;\n}\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/node_modules/partition-bundle/lib/partition.js":"\"use strict\";\n\nvar forOwn = require('./forOwn');\nvar arrayToObject = require('./arrayToObject');\n\nfunction partitioner(map, firstFile) {\n\n  var modulesByID = {};\n  var modulesBelongsToFileCount = {};\n  var inFirstFile = {};\n\n  // register the module\n  function addModule(row) {\n    modulesByID[row.id] = row;\n    modulesBelongsToFileCount[row.id] = {};\n  }\n\n  // search through the dependencies recursively, and associate each dependency\n  // to a target file\n  function depsBelongTo(deps, path, file, isInFirstFile, topLevel) {\n    forOwn(deps, function(dep) {\n      dep = modulesByID[dep];\n      var id = dep.dedupe || dep.id;\n      var belongsToFileCount = modulesBelongsToFileCount[id];\n      // this module should be in the main.js\n      if (isInFirstFile) {\n        inFirstFile[id] = true;\n      }\n      // only when this module was not traversed from the src parent module\n      if (path.indexOf(id) === -1) {\n        belongsToFileCount[file] = topLevel ? Infinity : ((belongsToFileCount[file] || 0) + 1);\n        path = path.slice();\n        path.push(id);\n        depsBelongTo(dep.deps, path, file, isInFirstFile);\n      }\n    });\n  }\n\n  function partition() {\n    var first = 0;\n    var files = [];\n\n    forOwn(map, function(_deps, file) {\n      if (first++ === 0) firstFile = file;\n      // top level dependencies, they get the highest 'count', so the map\n      // dictates where that module goes.\n      depsBelongTo(arrayToObject(_deps), [], file, file === firstFile, true);\n      files.push(file);\n    });\n\n    if (files.indexOf(firstFile) == -1) {\n      files.unshift(firstFile);\n    }\n\n    forOwn(modulesBelongsToFileCount, function(filesCount, id) {\n      // determine which file claims the module the most. If it's a dangling\n      // file, it's automatically added to the 'main.js'\n\n      var file = firstFile;\n      var count = 0;\n\n      Object.keys(filesCount).some(function(f) {\n        var localCount = filesCount[f];\n\n        // even though a module really belongs to another file, but is\n        // required by the main file, it should be in the main file.\n        // This solves immediate loading of a second file in the browser\n        if (inFirstFile[id]) {\n          file = firstFile;\n          return true;\n        }\n\n        if (localCount > count) {\n          file = f;\n          count = localCount;\n        }\n      });\n\n      // assign the destination file\n      modulesByID[id].destFile = file;\n    });\n\n    return {\n      modulesByID: modulesByID,\n      firstFile: firstFile,\n      files: files\n    };\n  }\n\n  return {\n    addModule: addModule,\n    partition: partition\n  };\n}\n\nmodule.exports = partitioner;\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/node_modules/partition-bundle/lib/arrayToObject.js":"\"use strict\";\n\nmodule.exports = arrayToObject;\n\nfunction arrayToObject(array) {\n  var obj = {};\n  array.forEach(function(item) {\n    obj[item] = item;\n  });\n  return obj;\n}\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/node_modules/partition-bundle/lib/loadScript.js":"\"use strict\";\n\nmodule.exports = loadScript;\n\nfunction loadScript(file, head, fn) {\n  if (typeof head == 'function') {\n    fn = head;\n    head = document.getElementsByTagName('head')[0];\n  }\n\n  var script = document.createElement('script');\n  var done = false;\n  var timer;\n\n  function ready(err) {\n    done = true;\n    script.onload = script.onerror = script.onreadystatechange = null;\n    clearTimeout(timer);\n    fn(err);\n  }\n\n  script.onload = script.onreadystatechange = function(e) {\n    if (!done && (!this.readyState || this.readyState == 'complete' || this.readyState == 'loaded')) {\n      ready(null);\n    }\n  };\n\n  script.onerror = function(error) {\n    if (!done) {\n      ready(error || new Error('Could not load file'));\n    }\n  };\n\n  timer = setTimeout(function() {\n    ready(new Error('Script loading timed-out'));\n  }, 3e4);\n\n  script.src = file;\n  head.appendChild(script);\n\n}\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/node_modules/partition-bundle/lib/parallel.js":"\"use strict\";\n\nvar fold = require('./fold');\n\nmodule.exports = parallel;\n\nfunction parallel(array, fn) {\n\n  var length = array.length;\n  var results = new Array(length);\n  var loaded = 0;\n\n  function wrap(fn, index) {\n    fn(function callback(err) {\n      results[index] = arguments;\n      loaded++;\n      ready();\n    });\n  }\n\n  function ready() {\n    if (loaded >= length) {\n      fn.apply(null, results);\n    }\n  }\n\n  ready();\n\n  fold(array, 0, wrap);\n\n}\n\nparallel.errors = function errors(args) {\n  return fold(args, [], function(val, key, errors) {\n    if (val[0]) errors.push(val[0]);\n    return errors;\n  });\n};\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/node_modules/partition-bundle/preludes/_prelude.js":"\"use strict\";\n\nvar parallel   = require('../lib/parallel');\nvar loadScript = require('../lib/loadScript');\nvar fold       = require('../lib/fold');\nvar append     = require('../lib/append');\nvar indexOf    = require('../lib/indexOf');\n\nvar cache = {};\nvar modules = {};\n\nfunction __define(id, def, deps) {\n  modules[id] = {def: def, deps: deps};\n}\n\nfunction __require(id) {\n  var module = cache[id];\n  if (!module) {\n    module = cache[id] = {};\n    var exports = module.exports = {};\n    if (modules[id]) {\n      var _req = function(_id) {\n        return __require(modules[id].deps[_id]).exports;\n      };\n      modules[id].def.call(exports, _req, module, exports);\n    } else {\n      var err = new Error('Cannot find module \\'' + id + '\\'');\n      err.code = 'MODULE_NOT_FOUND';\n      module.err = err;\n    }\n  }\n  return module;\n}\n\nfunction __requireAll(ids, fn) {\n  fn.apply(null, fold(ids, [[], []], function(id, i, args) {\n    var module = __require(id);\n    args[module.err ? 0 : 1].push(module.err || module.exports);\n    return args;\n  }));\n}\n\nfunction defaultErrFn(err) {\n  throw err;\n}\n\nfunction noop() {\n}\n\nvar loading = {};\nvar loaded = [];\n\nfunction loadScriptFile(file) {\n  loadScript(loadjs.url + file, function(err) {\n    var cbs = loading[file];\n    if (!err) {\n      loading[file] = null;\n      loaded.push(file);\n    }\n    fold(cbs, 0, function(cb) {\n      cb(err, file);\n    });\n  });\n}\n\n// it's possible to set those options as a global\nvar opts = global.loadjs || {};\n\nvar loadjs = global.loadjs = function(deps, fn, errFn) {\n\n  if (!fn) fn = noop;\n  if (!errFn) errFn = defaultErrFn;\n\n  // and if we need to load external files\n  var filesToWatch = fold(deps, [], function(module, key, toWatch) {\n    return fold(loadjs.map[module] || [], toWatch, function(fIndex, i, toLoad) {\n      var file = loadjs.files[fIndex];\n      if (indexOf(loaded, file) == -1) {\n        toLoad.push(file);\n      }\n      return toLoad;\n    });\n  });\n\n  // files that are not yet loading\n  var filesToLoad = fold(filesToWatch, [], function(file, key, files) {\n    return loading[file] ? files : append(files, file);\n  });\n\n  var loadTasks = fold(filesToWatch, [], function(file, key, tasks) {\n    // subscribe to the array of callbacks that is\n    // called when the file is loaded\n    tasks.push(function(cb) {\n      if (loading[file]) loading[file].push(cb);\n      else loading[file] = [cb];\n    });\n    return tasks;\n  });\n\n  // when all files are loaded, the modules can be required\n  parallel(loadTasks, function() {\n    var errors = parallel.errors(arguments);\n    if (errors.length) {\n      errFn(errors[0]);\n    } else {\n      __requireAll(deps, function(errors, exports) {\n        if (errors.length) errFn(errors[0]);\n        else fn.apply(null, exports);\n      });\n    }\n  });\n\n  // trigger loading the files, if necessary\n  fold(filesToLoad, 0, loadScriptFile);\n\n};\n\nloadjs.d = __define;\n\nloadjs.url = opts.url || '';\nloadjs.files = [];\nloadjs.map = {};\n","/home/travis/build/npmtest/node-npmtest-partition-bundle/node_modules/partition-bundle/preludes/prelude.js":"(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\nvar indexOf = require('./indexOf');\n\nmodule.exports = append;\n\nfunction append(array, item) {\n  if (indexOf(array, item) == -1) {\n    array.push(item);\n  }\n  return array;\n}\n\n},{\"./indexOf\":3}],2:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = fold;\n\nfunction fold(array, acc, fn, ctx) {\n  for (var i = 0; i < array.length; i++) {\n    acc = fn.call(ctx, array[i], i, acc);\n  }\n  return acc;\n}\n\n\n},{}],3:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = indexOf;\n\nfunction indexOf(array, item) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === item) return i;\n  }\n  return -1;\n}\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\n\nmodule.exports = loadScript;\n\nfunction loadScript(file, head, fn) {\n  if (typeof head == 'function') {\n    fn = head;\n    head = document.getElementsByTagName('head')[0];\n  }\n\n  var script = document.createElement('script');\n  var done = false;\n  var timer;\n\n  function ready(err) {\n    done = true;\n    script.onload = script.onerror = script.onreadystatechange = null;\n    clearTimeout(timer);\n    fn(err);\n  }\n\n  script.onload = script.onreadystatechange = function(e) {\n    if (!done && (!this.readyState || this.readyState == 'complete' || this.readyState == 'loaded')) {\n      ready(null);\n    }\n  };\n\n  script.onerror = function(error) {\n    if (!done) {\n      ready(error || new Error('Could not load file'));\n    }\n  };\n\n  timer = setTimeout(function() {\n    ready(new Error('Script loading timed-out'));\n  }, 3e4);\n\n  script.src = file;\n  head.appendChild(script);\n\n}\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\n\nvar fold = require('./fold');\n\nmodule.exports = parallel;\n\nfunction parallel(array, fn) {\n\n  var length = array.length;\n  var results = new Array(length);\n  var loaded = 0;\n\n  function wrap(fn, index) {\n    fn(function callback(err) {\n      results[index] = arguments;\n      loaded++;\n      ready();\n    });\n  }\n\n  function ready() {\n    if (loaded >= length) {\n      fn.apply(null, results);\n    }\n  }\n\n  ready();\n\n  fold(array, 0, wrap);\n\n}\n\nparallel.errors = function errors(args) {\n  return fold(args, [], function(val, key, errors) {\n    if (val[0]) errors.push(val[0]);\n    return errors;\n  });\n};\n\n},{\"./fold\":2}],6:[function(require,module,exports){\n(function (global){\n\"use strict\";\n\nvar parallel   = require('../lib/parallel');\nvar loadScript = require('../lib/loadScript');\nvar fold       = require('../lib/fold');\nvar append     = require('../lib/append');\nvar indexOf    = require('../lib/indexOf');\n\nvar cache = {};\nvar modules = {};\n\nfunction __define(id, def, deps) {\n  modules[id] = {def: def, deps: deps};\n}\n\nfunction __require(id) {\n  var module = cache[id];\n  if (!module) {\n    module = cache[id] = {};\n    var exports = module.exports = {};\n    if (modules[id]) {\n      var _req = function(_id) {\n        return __require(modules[id].deps[_id]).exports;\n      };\n      modules[id].def.call(exports, _req, module, exports);\n    } else {\n      var err = new Error('Cannot find module \\'' + id + '\\'');\n      err.code = 'MODULE_NOT_FOUND';\n      module.err = err;\n    }\n  }\n  return module;\n}\n\nfunction __requireAll(ids, fn) {\n  fn.apply(null, fold(ids, [[], []], function(id, i, args) {\n    var module = __require(id);\n    args[module.err ? 0 : 1].push(module.err || module.exports);\n    return args;\n  }));\n}\n\nfunction defaultErrFn(err) {\n  throw err;\n}\n\nfunction noop() {\n}\n\nvar loading = {};\nvar loaded = [];\n\nfunction loadScriptFile(file) {\n  loadScript(loadjs.url + file, function(err) {\n    var cbs = loading[file];\n    if (!err) {\n      loading[file] = null;\n      loaded.push(file);\n    }\n    fold(cbs, 0, function(cb) {\n      cb(err, file);\n    });\n  });\n}\n\n// it's possible to set those options as a global\nvar opts = global.loadjs || {};\n\nvar loadjs = global.loadjs = function(deps, fn, errFn) {\n\n  if (!fn) fn = noop;\n  if (!errFn) errFn = defaultErrFn;\n\n  // and if we need to load external files\n  var filesToWatch = fold(deps, [], function(module, key, toWatch) {\n    return fold(loadjs.map[module] || [], toWatch, function(fIndex, i, toLoad) {\n      var file = loadjs.files[fIndex];\n      if (indexOf(loaded, file) == -1) {\n        toLoad.push(file);\n      }\n      return toLoad;\n    });\n  });\n\n  // files that are not yet loading\n  var filesToLoad = fold(filesToWatch, [], function(file, key, files) {\n    return loading[file] ? files : append(files, file);\n  });\n\n  var loadTasks = fold(filesToWatch, [], function(file, key, tasks) {\n    // subscribe to the array of callbacks that is\n    // called when the file is loaded\n    tasks.push(function(cb) {\n      if (loading[file]) loading[file].push(cb);\n      else loading[file] = [cb];\n    });\n    return tasks;\n  });\n\n  // when all files are loaded, the modules can be required\n  parallel(loadTasks, function() {\n    var errors = parallel.errors(arguments);\n    if (errors.length) {\n      errFn(errors[0]);\n    } else {\n      __requireAll(deps, function(errors, exports) {\n        if (errors.length) errFn(errors[0]);\n        else fn.apply(null, exports);\n      });\n    }\n  });\n\n  // trigger loading the files, if necessary\n  fold(filesToLoad, 0, loadScriptFile);\n\n};\n\nloadjs.d = __define;\n\nloadjs.url = opts.url || '';\nloadjs.files = [];\nloadjs.map = {};\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"../lib/append\":1,\"../lib/fold\":2,\"../lib/indexOf\":3,\"../lib/loadScript\":4,\"../lib/parallel\":5}]},{},[6]);\n"}